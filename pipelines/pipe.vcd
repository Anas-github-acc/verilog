$date
	Tue Apr 22 03:10:03 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module simuli $end
$var wire 16 ! zout [15:0] $end
$var reg 8 " addr [7:0] $end
$var reg 1 # clk1 $end
$var reg 1 $ clk2 $end
$var reg 4 % func [3:0] $end
$var reg 4 & rd [3:0] $end
$var reg 4 ' rs1 [3:0] $end
$var reg 4 ( rs2 [3:0] $end
$var integer 32 ) k [31:0] $end
$scope module pipe_inst $end
$var wire 8 * addr [7:0] $end
$var wire 1 + clk1 $end
$var wire 1 , clk2 $end
$var wire 4 - func [3:0] $end
$var wire 4 . rd [3:0] $end
$var wire 4 / rs1 [3:0] $end
$var wire 4 0 rs2 [3:0] $end
$var wire 16 1 zout [15:0] $end
$var reg 16 2 l1a [15:0] $end
$var reg 8 3 l1add [7:0] $end
$var reg 16 4 l1b [15:0] $end
$var reg 4 5 l1func [3:0] $end
$var reg 4 6 l1rd [3:0] $end
$var reg 8 7 l2add [7:0] $end
$var reg 4 8 l2rd [3:0] $end
$var reg 16 9 l2z [15:0] $end
$var reg 8 : l3add [7:0] $end
$var reg 16 ; l3z [15:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
b0 0
b0 /
b0 .
b0 -
0,
0+
b0 *
bx )
b0 (
b0 '
b0 &
b0 %
0$
0#
b0 "
bx !
$end
#5
b1111 )
#10
b1 *
1$
b1 -
1#
#20
b0 9
1,
b0 *
0$
b0 -
0#
b10 %
b1111101 "
b1010 &
b1010 .
b1 (
b1 0
b110 '
b110 /
#30
b1 *
1$
b1 -
1#
#40
b0 *
0$
b0 -
0#
#50
b1 *
1$
b1 -
1#
#60
b0 3
b1100 6
b0 5
b1000 4
b1001 2
b0 !
b0 1
b0 ;
1+
0,
b0 *
0$
b0 -
0#
b11 %
b1111110 "
b1100 &
b1100 .
b1000 (
b1000 0
b1001 '
b1001 /
#70
b1 *
1$
b1 -
1#
#80
b0 *
0$
b0 -
0#
#90
b1 *
1$
b1 -
1#
#100
b0 7
b1100 8
b10001 9
0+
1,
b0 *
0$
b0 -
0#
b100 %
b1111101 "
b1101 &
b1101 .
b100 (
b100 0
b10 '
b10 /
#110
b1 *
1$
b1 -
1#
#120
b0 *
0$
b0 -
0#
#130
b1 *
1$
b1 -
1#
#140
b0 *
0$
b0 -
0#
#150
b1 *
1$
b1 -
1#
#160
b0 *
0$
b0 -
0#

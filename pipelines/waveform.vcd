$date
	Tue Apr 01 10:59:25 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module PipelineProcessor_tb $end
$var wire 32 ! mem_out [31:0] $end
$var reg 32 " addr [31:0] $end
$var reg 1 # clk $end
$var reg 4 $ func [3:0] $end
$var reg 5 % rd [4:0] $end
$var reg 1 & reset $end
$var reg 5 ' rs1 [4:0] $end
$var reg 5 ( rs2 [4:0] $end
$scope module uut $end
$var wire 32 ) addr [31:0] $end
$var wire 1 # clk $end
$var wire 4 * func [3:0] $end
$var wire 32 + mem_out [31:0] $end
$var wire 5 , rd [4:0] $end
$var wire 1 & reset $end
$var wire 5 - rs1 [4:0] $end
$var wire 5 . rs2 [4:0] $end
$var reg 32 / ADDR_EX [31:0] $end
$var reg 32 0 ADDR_MEM [31:0] $end
$var reg 32 1 ALU_OUT_MEM [31:0] $end
$var reg 32 2 A_EX [31:0] $end
$var reg 32 3 B_EX [31:0] $end
$var reg 4 4 FUNC_EX [3:0] $end
$var reg 32 5 MEM_OUT [31:0] $end
$var reg 5 6 RD_EX [4:0] $end
$var reg 5 7 RD_MEM [4:0] $end
$var reg 32 8 alu_result [31:0] $end
$upscope $end
$upscope $end
$scope module PipelineProcessor_tb $end
$scope module uut $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
b0 .
b0 -
b0 ,
bx +
b0 *
b0 )
b0 (
b0 '
1&
b0 %
b0 $
0#
b0 "
bx !
$end
#5000
b0 /
b0 4
b0 6
b0 3
b0 2
b0 0
b0 7
b0 1
b0 !
b0 +
b0 5
1#
#10000
0#
0&
#15000
b1 3
b1 2
b0 8
1#
#20000
0#
b1000000000000 "
b1000000000000 )
b1010 %
b1010 ,
b110 (
b110 .
b101 '
b101 -
#25000
b1000000000000 /
b1010 6
b111 3
b110 2
b10 1
b10 8
1#
#30000
0#
#35000
b10 !
b10 +
b10 5
b1000000000000 0
b1010 7
b1101 1
b1101 8
1#
#40000
0#
#45000
b1101 !
b1101 +
b1101 5
1#
#50000
0#
#55000
1#
#60000
0#
#65000
1#
#70000
